[
  {
    "objectID": "annotation_stat.html",
    "href": "annotation_stat.html",
    "title": "Annotation stat",
    "section": "",
    "text": "source\n\nAnnotationStat\n\n AnnotationStat (annotation_type:int, id:int, label_id:int,\n                 processed_count:int, to_be_processed_count:int)\n\nInitialize self. See help(type(self)) for accurate signature.",
    "crumbs": [
      "Annotation stat"
    ]
  },
  {
    "objectID": "api.html",
    "href": "api.html",
    "title": "Box21 api",
    "section": "",
    "text": "import os\nfrom dotenv import load_dotenv\n\n\nload_dotenv()\nAPI_USERNAME = os.environ.get('EMAIL')\nAPI_PASSWORD = os.environ.get('PASSWORD')\nAPI_PROJECT_ID = os.environ.get('PROJECT_ID')\n\n\nsource\n\nBox21Api\n\n Box21Api (email:str, password:str, host:str, port:int, project_id:int)\n\nBox21 Api class\n\nbox21_api = Box21Api(API_USERNAME, API_PASSWORD, 'https://box21.ai', 443, API_PROJECT_ID) # type: ignore\n\n\n\nRetrieve assets\n\nsource\n\n\nBox21Api.get_asset\n\n Box21Api.get_asset (asset_id:int)\n\n\nsource\n\n\nBox21Api.get_assets\n\n Box21Api.get_assets (offset:int=0, limit:Optional[int]=None)\n\n\nbox21_api = Box21Api(API_USERNAME, API_PASSWORD, 'https://box21.ai', 443, API_PROJECT_ID) # type: ignore\nassets = box21_api.get_assets()\nprint('Number of assets retrieved', len(assets))\nfirst_asset = assets[0]\nprint(first_asset)\n\n1\nNumber of assets retrieved 3\nAsset({\"testing\": true})\n\n\n\nfirst_asset = box21_api.get_asset(first_asset.id)\nprint(first_asset)\n\nAsset({\"testing\": true})\n\n\n\nsource\n\n\nBox21Api.download_asset\n\n Box21Api.download_asset (asset_id:int)\n\n\nbox21_api = Box21Api(API_USERNAME, API_PASSWORD, 'https://box21.ai', 443, API_PROJECT_ID)\nassets = box21_api.get_assets(limit=10)\nimage = box21_api.download_asset(assets[0].id)\n\n1\n\n\n\nimage\n\n\n\n\n\n\n\n\n\n\nFilter assets\n\nsource\n\n\nBox21Api.get_assets_not_containing_meta\n\n Box21Api.get_assets_not_containing_meta (meta:List[str],\n                                          in_validation_set:bool=False,\n                                          validated:Optional[bool]=None)\n\n\nsource\n\n\nBox21Api.get_assets_containing_meta\n\n Box21Api.get_assets_containing_meta (meta:List[str],\n                                      in_validation_set:bool=False,\n                                      validated:Optional[bool]=None)\n\n\nsource\n\n\nBox21Api.get_assets_with_filters\n\n Box21Api.get_assets_with_filters (filters:List[Dict[str,str]])\n\n\nprint(assets[0].meta)\n\nassets = box21_api.get_assets_containing_meta(['testing'])\nprint(len(assets), assets[0].meta)\n\nassets = box21_api.get_assets_not_containing_meta(['testing'])\nprint(len(assets), assets[0].meta)\n\n{\"testing\": true}\n2 {\"testing\": true}\n1 {\"filename\": \"6d0a5af1-720e-47ee-86e5-bc0c15fe2015_chitals.png\", \"import\": \"true\", \"description\": \"Chital\"}\n\n\n\n\nFilter annotations\n\nsource\n\n\nBox21Api.get_annotations\n\n Box21Api.get_annotations (asset_id:int)\n\n\nbox21_api = Box21Api(API_USERNAME, API_PASSWORD, 'https://box21.ai', 443, API_PROJECT_ID)\nannotations = box21_api.get_annotations(assets[0].id)\nprint(len(annotations))\nprint(annotations[0].project_id)\n\n2\n1\n\n\n\n@patch\ndef get_annotations_with_label_name(self:Box21Api, label_name :str, validated : bool, asset_validated: bool, meta_contains: str, unclear: bool = False) -&gt; List[Box21Annotation]:\n    self.token = self.get_token()\n\n    filters : List[dict[str, Union[str, int]]] = []\n\n    filters = [\n                {\n                    \"type\": 27,\n                    \"value\": label_name\n                },\n                {\n                    \"type\": 17, \"value\": \"Yes\" if validated else \"No\"\n                },\n                {\n                    \"type\": 9, \"value\": \"Yes\" if asset_validated else \"No\"\n                },\n                {\n                    \"type\": 11, \"value\": \"Yes\" if unclear else \"No\"\n                }\n            ]\n\n    if meta_contains:\n            filters.append({\n                \"type\": 7,\n                \"value\": meta_contains\n            })\n\n    annotations = []\n    \n    url = '/api/asset/annotations'\n    payload = {\n        \"asset_id\": asset_id,\n    }\n    response = self.post(url, payload)\n\n    annotations = []\n\n    for annotation_json in response.json():\n        asset_id = annotation_json['asset_id']\n        annotation_id = annotation_json['id']\n        certainty = annotation_json['certainty']\n        label_id = annotation_json['label_id']\n        label_name = annotation_json['relationships']['label']['name']\n        project_id = annotation_json['project_id']\n        validated = annotation_json['validated']\n        coords = json.loads(annotation_json['coords'])\n\n        if annotation_json['type'] == 1:\n            x, y, w, h = coords\n            annotations.append(\n                Box21BoundingBox(asset_id, annotation_id, certainty, label_id, project_id, validated, x, y, w, h))\n        else:\n            x, y = coords\n            annotations.append(\n                Box21Keypoint(asset_id, annotation_id, certainty, label_id, project_id, validated, x, y))\n\n\n    return annotations\n\n\n\nUpdate asset meta\nAn asset has meta which is a list of key value pairs. You can add, update and delete them via the api\n\nsource\n\n\nBox21Api.delete_asset_meta_key\n\n Box21Api.delete_asset_meta_key (asset_id:int, key:str)\n\n\nsource\n\n\nBox21Api.update_asset_meta\n\n Box21Api.update_asset_meta (asset_id:int, key:str, value:str)\n\n\nbox21_api = Box21Api(API_USERNAME, API_PASSWORD, 'https://box21.ai', 443, API_PROJECT_ID)\nupdated_asset = box21_api.update_asset_meta(assets[0].id, 'some_new_key', 'some new value')\n\nprint(json.loads(updated_asset.meta))\n\n{'filename': '6d0a5af1-720e-47ee-86e5-bc0c15fe2015_chitals.png', 'import': 'true', 'description': 'Chital', 'some_new_key': 'some new value'}\n\n\n\nbox21_api = Box21Api(API_USERNAME, API_PASSWORD, 'https://box21.ai', 443, API_PROJECT_ID)\nupdated_asset = box21_api.delete_asset_meta_key(assets[0].id, 'some_new_key')\n\nprint(json.loads(updated_asset.meta))\n\n{'filename': '6d0a5af1-720e-47ee-86e5-bc0c15fe2015_chitals.png', 'import': 'true', 'description': 'Chital'}\n\n\n\n\nGet labels\nGet all labels for a specific project\n\nsource\n\n\nBox21Api.get_labels\n\n Box21Api.get_labels ()\n\n\nbox21_api = Box21Api(API_USERNAME, API_PASSWORD, 'https://box21.ai', 443, API_PROJECT_ID)\nlabels = box21_api.get_labels()\nprint(labels[0])\nprint(labels[0].annotation_stats[0])\nprint(labels[0].annotation_stats[1])\n\nLabel(('Bounding box', 'Chital', 1))\nAnnotationStat(1, 400065, 1, 2, 0)\nAnnotationStat(2, 400066, 1, 0, 0)\n\n\n\n\nGet all annotations for a label:\n\nsource\n\n\nBox21Api.get_label_annotations\n\n Box21Api.get_label_annotations (label:box21_api.label.Box21Label)\n\n\nbox21_api = Box21Api(API_USERNAME, API_PASSWORD, 'https://box21.ai', 443, API_PROJECT_ID)\nannotations = box21_api.get_label_annotations(labels[0])\nprint(len(annotations))\nfor annotation in annotations:\n    print(annotation)\n\n2\nBoundingBox(1, (0.525, 0.3911, 0.3484, 0.3532))\nBoundingBox(1, (0.1641, 0.5291, 0.2766, 0.3381))\n\n\n\nfrom typing import Any, Dict, List\nimport json\n\n@patch\ndef re_label(self:Box21Api, annotations: List[Box21Annotation], label_name: str) -&gt; None:\n    url = '/api/re-label'\n    annotation_ids : List[int] = [annotation.id for annotation in annotations]\n    payload : Dict[str, Any] = {\n        'annotation_ids': json.dumps(annotation_ids),\n        'label': label_name\n    }\n    self.post(url, payload)\n\n\n@patch\ndef delete_label(self:Box21Api, label_id: str) -&gt; None:\n    url = '/api/label/delete'\n    payload : Dict[str, Any] = {\n        'label_id': label_id,\n        'project_id': box21_api.project_id\n    }\n    self.post(url, payload)\n\n\n\nAdding and deleting assets\n\nsource\n\n\nBox21Api.delete_assets\n\n Box21Api.delete_assets (asset_ids:List[int])\n\n\nsource\n\n\nBox21Api.add_asset\n\n Box21Api.add_asset (file_path:pathlib.Path, meta:Dict[str,Any],\n                     annotations:List[box21_api.annotation.Annotation]=[],\n                     validated:bool=False, in_validation_set:bool=False,\n                     no_duplicate_filename:bool=False)\n\n\nimage.save('example.png')\nfile_path = Path('example.png')\nbox21_api = Box21Api(API_USERNAME, API_PASSWORD, 'https://box21.ai', 443, API_PROJECT_ID)\nasset = box21_api.add_asset(file_path, {'testing': True})\n\n\nprint('Number of assets before delete', len(box21_api.get_assets()))\n\n1\n[{\"deleted\":null,\"filename\":\"8aa70857-ce54-4a02-a1ea-ed2a60d13340_example.png\",\"id\":234898,\"in_validation_set\":false,\"liked\":false,\"meta\":\"{\\\"testing\\\": true}\",\"original_category\":\"\",\"path\":\"8aa70857-ce54-4a02-a1ea-ed2a60d13340_example.png\",\"project_id\":1,\"relationships\":{\"annotations\":[]},\"unclear\":null,\"validated\":\"false\"},{\"deleted\":null,\"filename\":\"6e309b62-43fa-4185-a55f-6e01174ee57d_example.png\",\"id\":234899,\"in_validation_set\":false,\"liked\":false,\"meta\":\"{\\\"testing\\\": true}\",\"original_category\":\"\",\"path\":\"6e309b62-43fa-4185-a55f-6e01174ee57d_example.png\",\"project_id\":1,\"relationships\":{\"annotations\":[]},\"unclear\":null,\"validated\":\"false\"},{\"deleted\":null,\"filename\":\"bce7d4f9-9f36-4c50-b546-c176b0f54d70_example.png\",\"id\":235889,\"in_validation_set\":false,\"liked\":false,\"meta\":\"{\\\"testing\\\": true}\",\"original_category\":\"\",\"path\":\"bce7d4f9-9f36-4c50-b546-c176b0f54d70_example.png\",\"project_id\":1,\"relationships\":{\"annotations\":[]},\"unclear\":null,\"validated\":\"false\"},{\"deleted\":null,\"filename\":\"6d0a5af1-720e-47ee-86e5-bc0c15fe2015_chitals.png\",\"id\":1,\"in_validation_set\":false,\"liked\":false,\"meta\":\"{\\\"filename\\\": \\\"6d0a5af1-720e-47ee-86e5-bc0c15fe2015_chitals.png\\\", \\\"import\\\": \\\"true\\\", \\\"description\\\": \\\"Chital\\\"}\",\"original_category\":\"\",\"path\":\"6d0a5af1-720e-47ee-86e5-bc0c15fe2015_chitals.png\",\"project_id\":1,\"relationships\":{\"annotations\":[{\"asset_id\":1,\"certainty\":\"1\",\"coords\":\"[0.525, 0.3911, 0.3484, 0.3532]\",\"format\":\"normalized_xywh\",\"id\":11,\"label_id\":1,\"project_id\":1,\"relationships\":{},\"type\":1,\"validated\":true},{\"asset_id\":1,\"certainty\":\"1\",\"coords\":\"[0.1641, 0.5291, 0.2766, 0.3381]\",\"format\":\"normalized_xywh\",\"id\":12,\"label_id\":1,\"project_id\":1,\"relationships\":{},\"type\":1,\"validated\":true}]},\"unclear\":false,\"validated\":\"true\"}]\n\nNumber of assets before delete 4\n\n\n\nbox21_api.delete_assets([asset.id])\nprint('Number of assets after delete', len(box21_api.get_assets()))\n\n1\n[{\"deleted\":null,\"filename\":\"8aa70857-ce54-4a02-a1ea-ed2a60d13340_example.png\",\"id\":234898,\"in_validation_set\":false,\"liked\":false,\"meta\":\"{\\\"testing\\\": true}\",\"original_category\":\"\",\"path\":\"8aa70857-ce54-4a02-a1ea-ed2a60d13340_example.png\",\"project_id\":1,\"relationships\":{\"annotations\":[]},\"unclear\":null,\"validated\":\"false\"},{\"deleted\":null,\"filename\":\"6e309b62-43fa-4185-a55f-6e01174ee57d_example.png\",\"id\":234899,\"in_validation_set\":false,\"liked\":false,\"meta\":\"{\\\"testing\\\": true}\",\"original_category\":\"\",\"path\":\"6e309b62-43fa-4185-a55f-6e01174ee57d_example.png\",\"project_id\":1,\"relationships\":{\"annotations\":[]},\"unclear\":null,\"validated\":\"false\"},{\"deleted\":null,\"filename\":\"6d0a5af1-720e-47ee-86e5-bc0c15fe2015_chitals.png\",\"id\":1,\"in_validation_set\":false,\"liked\":false,\"meta\":\"{\\\"filename\\\": \\\"6d0a5af1-720e-47ee-86e5-bc0c15fe2015_chitals.png\\\", \\\"import\\\": \\\"true\\\", \\\"description\\\": \\\"Chital\\\"}\",\"original_category\":\"\",\"path\":\"6d0a5af1-720e-47ee-86e5-bc0c15fe2015_chitals.png\",\"project_id\":1,\"relationships\":{\"annotations\":[{\"asset_id\":1,\"certainty\":\"1\",\"coords\":\"[0.525, 0.3911, 0.3484, 0.3532]\",\"format\":\"normalized_xywh\",\"id\":11,\"label_id\":1,\"project_id\":1,\"relationships\":{},\"type\":1,\"validated\":true},{\"asset_id\":1,\"certainty\":\"1\",\"coords\":\"[0.1641, 0.5291, 0.2766, 0.3381]\",\"format\":\"normalized_xywh\",\"id\":12,\"label_id\":1,\"project_id\":1,\"relationships\":{},\"type\":1,\"validated\":true}]},\"unclear\":false,\"validated\":\"true\"}]\n\nNumber of assets after delete 3\n\n\nExample adding a bounding box\n\nbounding_box = BoundingBox(\n    certainty=0.9,\n    label_name='Testing adding label',\n    x= 0.0,\n    y= 0.3,\n    width= 0.1,\n    height= 0.1\n)\n\nimage.save('example.png')\nfile_path = Path('example.png')\nbox21_api = Box21Api(API_USERNAME, API_PASSWORD, 'https://box21.ai', 443, API_PROJECT_ID)\nasset = box21_api.add_asset(file_path, {'testing': True}, annotations=[bounding_box])\nprint(asset)\n\nAsset({\"testing\": true})\n\n\n\nasset_annotations = box21_api.get_annotations(asset.id)\nasset_annotations\n\n[BoundingBox(130, (0.0, 0.3, 0.1, 0.1))]\n\n\n\nprint('Number of assets before delete', len(box21_api.get_assets()))\nbox21_api.delete_assets([asset.id])\nprint('Number of assets after delete', len(box21_api.get_assets()))\n\n1\n[{\"deleted\":null,\"filename\":\"8aa70857-ce54-4a02-a1ea-ed2a60d13340_example.png\",\"id\":234898,\"in_validation_set\":false,\"liked\":false,\"meta\":\"{\\\"testing\\\": true}\",\"original_category\":\"\",\"path\":\"8aa70857-ce54-4a02-a1ea-ed2a60d13340_example.png\",\"project_id\":1,\"relationships\":{\"annotations\":[]},\"unclear\":null,\"validated\":\"false\"},{\"deleted\":null,\"filename\":\"6e309b62-43fa-4185-a55f-6e01174ee57d_example.png\",\"id\":234899,\"in_validation_set\":false,\"liked\":false,\"meta\":\"{\\\"testing\\\": true}\",\"original_category\":\"\",\"path\":\"6e309b62-43fa-4185-a55f-6e01174ee57d_example.png\",\"project_id\":1,\"relationships\":{\"annotations\":[]},\"unclear\":null,\"validated\":\"false\"},{\"deleted\":null,\"filename\":\"6d0a5af1-720e-47ee-86e5-bc0c15fe2015_chitals.png\",\"id\":1,\"in_validation_set\":false,\"liked\":false,\"meta\":\"{\\\"filename\\\": \\\"6d0a5af1-720e-47ee-86e5-bc0c15fe2015_chitals.png\\\", \\\"import\\\": \\\"true\\\", \\\"description\\\": \\\"Chital\\\"}\",\"original_category\":\"\",\"path\":\"6d0a5af1-720e-47ee-86e5-bc0c15fe2015_chitals.png\",\"project_id\":1,\"relationships\":{\"annotations\":[{\"asset_id\":1,\"certainty\":\"1\",\"coords\":\"[0.525, 0.3911, 0.3484, 0.3532]\",\"format\":\"normalized_xywh\",\"id\":11,\"label_id\":1,\"project_id\":1,\"relationships\":{},\"type\":1,\"validated\":true},{\"asset_id\":1,\"certainty\":\"1\",\"coords\":\"[0.1641, 0.5291, 0.2766, 0.3381]\",\"format\":\"normalized_xywh\",\"id\":12,\"label_id\":1,\"project_id\":1,\"relationships\":{},\"type\":1,\"validated\":true}]},\"unclear\":false,\"validated\":\"true\"},{\"deleted\":null,\"filename\":\"1b606e85-12fb-475b-b4f1-0ab41d375d00_example.png\",\"id\":235890,\"in_validation_set\":false,\"liked\":false,\"meta\":\"{\\\"testing\\\": true}\",\"original_category\":\"\",\"path\":\"1b606e85-12fb-475b-b4f1-0ab41d375d00_example.png\",\"project_id\":1,\"relationships\":{\"annotations\":[{\"asset_id\":235890,\"certainty\":\"0.9\",\"coords\":\"[0.0, 0.3, 0.1, 0.1]\",\"format\":\"normalized_xywh\",\"id\":726109,\"label_id\":130,\"project_id\":1,\"relationships\":{},\"type\":1,\"validated\":false}]},\"unclear\":null,\"validated\":\"false\"}]\n\nNumber of assets before delete 4\n1\n[{\"deleted\":null,\"filename\":\"8aa70857-ce54-4a02-a1ea-ed2a60d13340_example.png\",\"id\":234898,\"in_validation_set\":false,\"liked\":false,\"meta\":\"{\\\"testing\\\": true}\",\"original_category\":\"\",\"path\":\"8aa70857-ce54-4a02-a1ea-ed2a60d13340_example.png\",\"project_id\":1,\"relationships\":{\"annotations\":[]},\"unclear\":null,\"validated\":\"false\"},{\"deleted\":null,\"filename\":\"6e309b62-43fa-4185-a55f-6e01174ee57d_example.png\",\"id\":234899,\"in_validation_set\":false,\"liked\":false,\"meta\":\"{\\\"testing\\\": true}\",\"original_category\":\"\",\"path\":\"6e309b62-43fa-4185-a55f-6e01174ee57d_example.png\",\"project_id\":1,\"relationships\":{\"annotations\":[]},\"unclear\":null,\"validated\":\"false\"},{\"deleted\":null,\"filename\":\"6d0a5af1-720e-47ee-86e5-bc0c15fe2015_chitals.png\",\"id\":1,\"in_validation_set\":false,\"liked\":false,\"meta\":\"{\\\"filename\\\": \\\"6d0a5af1-720e-47ee-86e5-bc0c15fe2015_chitals.png\\\", \\\"import\\\": \\\"true\\\", \\\"description\\\": \\\"Chital\\\"}\",\"original_category\":\"\",\"path\":\"6d0a5af1-720e-47ee-86e5-bc0c15fe2015_chitals.png\",\"project_id\":1,\"relationships\":{\"annotations\":[{\"asset_id\":1,\"certainty\":\"1\",\"coords\":\"[0.525, 0.3911, 0.3484, 0.3532]\",\"format\":\"normalized_xywh\",\"id\":11,\"label_id\":1,\"project_id\":1,\"relationships\":{},\"type\":1,\"validated\":true},{\"asset_id\":1,\"certainty\":\"1\",\"coords\":\"[0.1641, 0.5291, 0.2766, 0.3381]\",\"format\":\"normalized_xywh\",\"id\":12,\"label_id\":1,\"project_id\":1,\"relationships\":{},\"type\":1,\"validated\":true}]},\"unclear\":false,\"validated\":\"true\"}]\n\nNumber of assets after delete 3\n\n\n\n\nAdding and deleting annotations\n\nsource\n\n\nBox21Api.add_annotation\n\n Box21Api.add_annotation (annotation:box21_api.annotation.Annotation,\n                          asset:box21_api.asset.Asset)\n\n\nsource\n\n\nBox21Api.detete_annotations\n\n Box21Api.detete_annotations\n                              (annotations:List[box21_api.annotation.Box21\n                              Annotation])\n\n\n\nUpdating jobs\n\nsource\n\n\nBox21Api.update_job\n\n Box21Api.update_job (job_id:int, processing:Optional[bool]=None,\n                      processed:Optional[bool]=None,\n                      progress:Optional[int]=None)\n\n\n\nSuggestions\n\nsource\n\n\nBox21Api.delete_suggestions\n\n Box21Api.delete_suggestions (asset_id:int)",
    "crumbs": [
      "Box21 api"
    ]
  },
  {
    "objectID": "asset.html",
    "href": "asset.html",
    "title": "Asset",
    "section": "",
    "text": "An asset contains an image, meta information like validated or in_validation_set and optional a set op annotations (eg points and bounding boxes)\n\nsource\n\nAsset\n\n Asset (deleted:str, id:int, in_validation_set:bool, liked:bool, meta:str,\n        original_category:str, path:str, project_id:int, unclear:bool,\n        validated:bool, annotations:Optional[List[box21_api.annotation.Box\n        21Annotation]]=None)\n\nCreate a new asset, including the following parameters.\n\n\n\n\n\n\n\n\n\n\nType\nDefault\nDetails\n\n\n\n\ndeleted\nstr\n\ndeleted\n\n\nid\nint\n\nid\n\n\nin_validation_set\nbool\n\nwhether the asset is in the validation set\n\n\nliked\nbool\n\nwhether the asset is liked in Box21\n\n\nmeta\nstr\n\njson dict with key value pairs\n\n\noriginal_category\nstr\n\noptional category\n\n\npath\nstr\n\nbox21 asset path\n\n\nproject_id\nint\n\nbox21 asset project_id\n\n\nunclear\nbool\n\nwhether the asset is marked as unclear\n\n\nvalidated\nbool\n\nwhether the asset is marked as validated\n\n\nannotations\nOptional\nNone\n\n\n\n\n\njson_dict : Dict[str, Any] = {'deleted': None, 'filename': '768a1300-79f1-4261-b7cc-0ff44669008b_bricks_oblique_4_10.jpg', 'id': 21, 'in_validation_set': False, 'liked': False, 'meta': '{\"filename\": \"768a1300-79f1-4261-b7cc-0ff44669008b_bricks_oblique_4_10.jpg\", \"import\": \"true\", \"description\": \"Movies\"}', 'original_category': '', 'path': '768a1300-79f1-4261-b7cc-0ff44669008b_bricks_oblique_4_10.jpg', 'project_id': 3, 'unclear': False, 'validated': 'true'}\nasset = Asset.from_json(json_dict)\nprint(asset.id)\n\n21",
    "crumbs": [
      "Asset"
    ]
  },
  {
    "objectID": "job.html",
    "href": "job.html",
    "title": "Job",
    "section": "",
    "text": "Box21 uses jobs to handle large tasks\n\nsource\n\nJob\n\n Job (id:int, progress:int, processed:int, description:int,\n      created_at:str, parent_id:int, project_id:int, deleted_at:str)\n\nClass that represents a Box21 Job\n\n\n\n\nType\nDetails\n\n\n\n\nid\nint\n\n\n\nprogress\nint\npercentage\n\n\nprocessed\nint\n1=true, 0=false\n\n\ndescription\nint\n\n\n\ncreated_at\nstr\n\n\n\nparent_id\nint\n\n\n\nproject_id\nint\n\n\n\ndeleted_at\nstr",
    "crumbs": [
      "Job"
    ]
  },
  {
    "objectID": "CHANGELOG.html",
    "href": "CHANGELOG.html",
    "title": "Release notes",
    "section": "",
    "text": "Initial release"
  },
  {
    "objectID": "CHANGELOG.html#section",
    "href": "CHANGELOG.html#section",
    "title": "Release notes",
    "section": "",
    "text": "Initial release"
  },
  {
    "objectID": "filters.html",
    "href": "filters.html",
    "title": "Box21 asset and annotation filters",
    "section": "",
    "text": "source\n\nget_has_x_suggestions_filter\n\n get_has_x_suggestions_filter (x:int)\n\n\nsource\n\n\nget_has_suggestions_filter\n\n get_has_suggestions_filter ()\n\n\nsource\n\n\nget_not_containing_annotation_with_name_filter\n\n get_not_containing_annotation_with_name_filter (name:str)\n\n\nsource\n\n\nget_not_in_validation_set_filter\n\n get_not_in_validation_set_filter ()\n\n\nsource\n\n\nget_in_validation_set_filter\n\n get_in_validation_set_filter ()\n\n\nsource\n\n\nget_asset_is_not_validated_filter\n\n get_asset_is_not_validated_filter ()\n\n\nsource\n\n\nget_asset_is_validated_filter\n\n get_asset_is_validated_filter ()\n\n\nsource\n\n\nget_contains_meta_filter\n\n get_contains_meta_filter (contains:str)",
    "crumbs": [
      "Box21 asset and annotation filters"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "box21_api",
    "section": "",
    "text": "from box21_api.core import *\nA python package for interacting with your Box21 via the api",
    "crumbs": [
      "box21_api"
    ]
  },
  {
    "objectID": "index.html#install",
    "href": "index.html#install",
    "title": "box21_api",
    "section": "Install",
    "text": "Install\npip install box21_api",
    "crumbs": [
      "box21_api"
    ]
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "box21_api",
    "section": "How to use",
    "text": "How to use\n\nfrom box21_api.box21_api import Box21Api\n\n\nbox21_api = Box21Api(API_USERNAME, API_PASSWORD, 'https://box21.ai', 443, API_PROJECT_ID)\n\n\nlabels = box21_api.get_labels()\nprint('Number of labels retrieved', len(labels))\nprint('First label', labels[0])\n\nNumber of labels retrieved 2\nFirst label Label(('Bounding box', 'Chital', 1))\n\n\n\nannotations = box21_api.get_label_annotations(labels[0])\nprint('Number of annotations retrieved', len(annotations))\nprint('First annotation', annotations[0])\n\nNumber of annotations retrieved 2\nFirst annotation BoundingBox(Chital, (0.1641, 0.5291, 0.2766, 0.3381))\n\n\n\nfirst_annotation = annotations[0]\npil_image = box21_api.download_asset(first_annotation.asset_id)\npil_image\n\n\n\n\n\n\n\n\nSee more examples on: https://ramonhollands.github.io/box21_api/",
    "crumbs": [
      "box21_api"
    ]
  },
  {
    "objectID": "annotation.html",
    "href": "annotation.html",
    "title": "Annotation",
    "section": "",
    "text": "An asset can have different annotations, eg bounding box and keypoint\n\nsource\n\nBox21Annotation\n\n Box21Annotation (asset_id:int, id:int, certainty:float, label_id:int,\n                  project_id:int, validated:bool)\n\nAbstract class that represents a Box21 Annotation\n\n\n\n\nType\nDetails\n\n\n\n\nasset_id\nint\nrelated asset id in Box21\n\n\nid\nint\nunique id in Box21\n\n\ncertainty\nfloat\ncertainty of annotation\n\n\nlabel_id\nint\nrelated label id in Box21\n\n\nproject_id\nint\nrelated project id in Box21\n\n\nvalidated\nbool\nwhether the annotation is validated\n\n\n\n\nsource\n\n\nAnnotation\n\n Annotation (label_name:str, certainty:float)\n\nAbstract class that represents an Annotation\n\n\n\n\nType\nDetails\n\n\n\n\nlabel_name\nstr\nlabel name\n\n\ncertainty\nfloat\ncertainty of annotation\n\n\n\nBox21 currently supports the following annotations\n\n\nKeypoint\n\nsource\n\n\nKeypoint\n\n Keypoint (label_name:str, certainty:float, x:float, y:float)\n\nRepresents a Keypoint Annotation\n\nsource\n\n\nBox21Keypoint\n\n Box21Keypoint (asset_id:int, id:int, certainty:float, label_id:int,\n                project_id:int, validated:bool, x:int, y:int)\n\nRepresents a Box21 Keypoint Annotation\n\n\nBoundingBox\n\nsource\n\n\nBox21BoundingBox\n\n Box21BoundingBox (asset_id:int, id:int, certainty:float, label_id:int,\n                   project_id:int, validated:bool, x:float, y:float,\n                   width:float, height:float)\n\nRepresents a Box21 BoundingBox Annotation\n\nsource\n\n\nBoundingBox\n\n BoundingBox (label_name:str, certainty:float, x:float, y:float,\n              width:float, height:float)\n\nRepresents a BoundingBox Annotation\n\nsource\n\n\nparse_json_annotation\n\n parse_json_annotation (annotation_json:Dict[str,Any])",
    "crumbs": [
      "Annotation"
    ]
  },
  {
    "objectID": "label.html",
    "href": "label.html",
    "title": "Label",
    "section": "",
    "text": "An asset can have different annotations, eg bounding box and keypoint\n\nsource\n\nBox21Label\n\n Box21Label (id:int, name:float, parent_id:int, project_id:int,\n             annotation_stats:List[box21_api.annotation_stat.AnnotationSta\n             t], type:int)\n\nClass that represents a Box21 Label\nBox21 currently supports the following types: - 1: bounding box - 2: keypoint\nLabels can be organized hierarchical. This is defined by a parent_id refering to the parent Label",
    "crumbs": [
      "Label"
    ]
  },
  {
    "objectID": "export.html",
    "href": "export.html",
    "title": "Export",
    "section": "",
    "text": "Export Box21 data\n\nsource\n\nexport_assets\n\n export_assets (assets:List[box21_api.asset.Asset],\n                api:box21_api.box21_api.Box21Api)\n\n\nsource\n\n\nexport_asset\n\n export_asset (asset:box21_api.asset.Asset,\n               api:box21_api.box21_api.Box21Api)",
    "crumbs": [
      "Export"
    ]
  }
]